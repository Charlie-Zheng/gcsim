name: feature branch build
on:
  workflow_dispatch:
  push:
    branches:
      - "features**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17.7" # The Go version to download (if necessary) and use.
      - name: check files
        run: ls
      - run: |
          # make file runnable, might not be necessary
          chmod +x "${GITHUB_WORKSPACE}/scripts/deploy.sh"
          # run the script
          "${GITHUB_WORKSPACE}/scripts/deploy.sh"
      - run: |
          # make file runnable, might not be necessary
          chmod +x "${GITHUB_WORKSPACE}/scripts/build.sh"
          # run the script
          "${GITHUB_WORKSPACE}/scripts/build.sh"
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            gcsim.exe
      - name: Set up Node.js ‚öôÔ∏è
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies üì¶
        run: |
          yarn install --frozen-lockfile
          yarn build
        working-directory: ./app
      - name: check files again
        run: ls
        working-directory: ./app/build
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: gcsim
          directory: ./app/build
          branch: ${{ steps.extract_branch.outputs.branch }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
